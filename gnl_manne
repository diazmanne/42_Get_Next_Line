#include "get_next_line.h"

int				n_found(const int fd, char **line, char **ss,
						char *n, int r)
{
	char		*tmp;
	int			i;
	
	i = 0;
	while (ss[fd][i++] != '\n' && ss[fd][i++] != '\0');
	if (n)
	{
		*line = ft_strsub(ss[fd],0,i);
		tmp = ft_strdup(ss[fd] + i + 1);
		free(ss[fd]);
		ss[fd] = tmp;
	}
	else if (ss[fd][i] == '\0')
	{
		if (r == BUFF_SIZE)
			return (get_next_line(fd,line));
		*line = ft_strdup(ss[fd]);
		ft_strdel(&ss[fd]);
	}
	return(1);
}

int				get_next_line(const int fd, char **line)
{
	static char *ss[LIM_MAX];
	char		b[BUFF_SIZE + 1];
	char		*t;
	char		*n;
	int			r;
	int			i;
	
	i = 0;
	if (fd < 0 || line == NULL)
		return (-1);
	while ((r = read(fd,b,BUFF_SIZE)) > 0)
	{
		if(ss[fd] == NULL)
			ss[fd] = ft_strnew(1);
		b[r] = '\0';
		t = ft_strjoin(ss[fd],b);
		ft_strdel(&ss[fd]);
		ss[fd] = t;
		if ((n = ft_strchr(b,'\n')))
			break;
	}
	if (r == 0 && (ss[fd] == NULL || ss[fd][i] == '\0'))
		return (0);
	if (r < 0)
		return(-1);
	return(n_found(fd,line,ss,n,r));
}
